//by Lauritz Kramberger
frameRate(2);
//fuck commenting
var bombenzahl = 11;
var MineField = [
    [1],
    [2]
];
var draw_background = function() {
    background(181, 181, 181);
    //fill(168, 168, 168);
    noStroke();

    fill(209, 209, 209);
    rect(8, 89, width - 15, height - 100);

    fill(150, 150, 150);
    triangle(8, 89, 490, 89, 8, 529);

    fill(168, 168, 168);
    rect(14, 97, 470, 427);

    fill(209, 209, 209);
    rect(8, 10, 480, 66);
    triangle(8, 10, 490, 10, 8, 76);

    fill(150, 150, 150);
    triangle(18, 76, 22, 63, 8, 76);
    triangle(488, 10, 475, 20, 487, 32);
    rect(18, 18, 470, 58);

    fill(181, 181, 181);
    rect(16, 18, 463, 51);
};
var draw_button_closed = function(atx, aty, size) {
    noStroke();
    fill(209, 209, 209);

    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(150, 150, 150);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);


};
var draw_button_empty = function(atx, aty, size) {
    noStroke();
    fill(150, 150, 150);


    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 209, 209);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);


};
var draw_button_bomb = function(atx, aty, size) {
    noStroke();
    fill(150, 150, 150);


    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 209, 209);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);

    fill(50, 50, 50);
    rect(atx + -3, aty + -9, 5, 5);
    ellipse(atx + 0, aty + 2, 16, 16);
    fill(102, 102, 102);
    ellipse(atx + 0, aty + 2, 12, 14);
    fill(255, 0, 0);
    stroke(77, 77, 77);

    line(atx - 1, aty - 6, atx + 1, aty - 12);
    line(atx + 1, aty - 12, atx + 5, aty - 11);

    stroke(199, 0, 0);
    ellipse(atx + 5, aty - 11, 1, 1);
};
var draw_button_bomb_pressed = function(atx, aty, size) {

    noStroke();
    fill(163, 78, 78);



    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 134, 134);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);



    fill(201, 96, 96);
    rect(-16 + atx, -16 + aty, 32, 32);

    fill(50, 50, 50);
    rect(atx + -3, aty + -9, 5, 5);
    ellipse(atx + 0, aty + 2, 16, 16);
    fill(102, 102, 102);
    ellipse(atx + 0, aty + 2, 12, 14);
    fill(255, 0, 0);
    stroke(77, 77, 77);

    line(atx - 1, aty - 6, atx + 1, aty - 12);
    line(atx + 1, aty - 12, atx + 5, aty - 11);

    stroke(199, 0, 0);
    ellipse(atx + 5, aty - 11, 1, 1);

};
var draw_button_flag = function(atx, aty, size) {

    noStroke();
    fill(209, 209, 209);

    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(150, 150, 150);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);
    rect(-16 + atx, -16 + aty, 32, 32);


    fill(194, 0, 0);
    triangle(atx + -6, aty + -11, atx + -7, aty + 0, atx + 10, aty + -4);

    fill(219, 7, 7);
    triangle(atx + -8, aty + -9, atx + -5, aty + 0, atx + 3, aty + -4);

    fill(107, 107, 107);
    rect(atx + -8, aty + -12, 2, 25);


};
var draw_random_button = function(atx, aty) {
    switch (round(random(1, 4))) {
        case 1:
            draw_button_empty(atx, aty);
            break;
        case 2:
            draw_button_bomb(atx, aty);
            break;
        case 3:
            draw_button_bomb_pressed(atx, aty);
            break;
        case 4:
            draw_button_flag(atx, aty);
            break;
    }

};
var draw_button_one = function(atx, aty) {

    noStroke();
    fill(150, 150, 150);


    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 209, 209);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);

    fill(0, 121, 201);
    rect(atx + -4, aty + -11, 8, 22);


    fill(0, 110, 184);
    rect(atx + -2, aty + -11, 4, 20);

};
var draw_button_two = function(atx, aty) {

    noStroke();
    fill(150, 150, 150);

    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 209, 209);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);


    fill(0, 168, 28);
    rect(atx + -10, aty + -11, 8, 22);


    fill(0, 168, 28);
    rect(atx + -8, aty + -11, 4, 20);


    fill(0, 168, 28);
    rect(atx + 0, aty + -11, 8, 22);


    fill(0, 168, 28);
    rect(atx + 2, aty + -11, 4, 20);


};
var draw_button_three = function(atx, aty) {

    noStroke();
    fill(150, 150, 150);

    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 209, 209);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);


    fill(205, 212, 0);
    rect(atx + -14, aty + -11, 8, 22);


    fill(198, 224, 4);
    rect(atx + -12, aty + -11, 4, 20);


    fill(205, 212, 0);
    rect(atx + -4, aty + -11, 8, 22);


    fill(198, 224, 4);
    rect(atx - 2, aty + -11, 4, 20);

    fill(205, 212, 0);
    rect(atx + 6, aty + -11, 8, 22);


    fill(198, 224, 4);
    rect(atx + 9, aty + -11, 4, 20);

};
var draw_button_four = function(atx, aty) {
    var x = 4;
    noStroke();
    fill(150, 150, 150);


    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 209, 209);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);

    fill(214, 155, 4);
    quad(atx + -12 + x, aty + -12, atx + -3 + x, aty + 11, atx + 3 + x, aty + 11, atx + -6 + x, aty + -12);
    quad(atx + 4 + x, aty + -12, atx + -3 + x, aty + 11, atx + 3 + x, aty + 11, atx + 10 + x, aty + -12);
    rect(atx + x + -18, aty + x + -16, 5, 23);

};
var draw_button_five = function(atx, aty) {
    var x = 0;
    noStroke();
    fill(150, 150, 150);


    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 209, 209);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);

    fill(214, 0, 0);
    quad(atx + -12 + x, aty + -12, atx + -3 + x, aty + 11, atx + 3 + x, aty + 11, atx + -6 + x, aty + -12);
    quad(atx + 4 + x, aty + -12, atx + -3 + x, aty + 11, atx + 3 + x, aty + 11, atx + 10 + x, aty + -12);
    //rect(atx+x+-18,aty+x+-16,5,23);

};
var draw_button_six = function(atx, aty) {

    var x = -3;
    noStroke();
    fill(150, 150, 150);


    triangle(-20 + atx, -20 + aty, 20 + atx, -20 + aty, -20 + atx, 20 + aty);

    fill(209, 209, 209);
    triangle(20 + atx, 20 + aty, -20 + atx, 20 + aty, 20 + atx, -20 + aty);

    fill(184, 184, 184);

    rect(-16 + atx, -16 + aty, 32, 32);

    fill(76, 0, 120);
    quad(atx + -12 + x, aty + -12, atx + -3 + x, aty + 11, atx + 3 + x, aty + 11, atx + -6 + x, aty + -12);
    quad(atx + 4 + x, aty + -12, atx + -3 + x, aty + 11, atx + 3 + x, aty + 11, atx + 10 + x, aty + -12);
    rect(atx + x + 12, aty + -12, 5, 23);

};
var draw_test_field = function() {
    draw_button_closed(100, 100);
    draw_button_bomb(200, 100);
    draw_button_empty(300, 100);
    draw_button_bomb_pressed(400, 100);
    draw_button_flag(100, 200);
    draw_button_one(200, 200);
    draw_button_two(300, 200);
    draw_button_three(400, 200);
    draw_button_four(100, 300);
    draw_button_five(200, 300);
    draw_button_six(300, 300);
};
var MineSquare = function(atx, aty, xi, yi) {
    this.x = atx;
    this.y = aty;
    this.xID = xi;
    this.yID = yi;
    this.image = 0;
    //id:
    //bomb = 10
    //flag = 11
    //all other are the number of bombs next to it

    this.isBomb = false;
    this.isOpen = false;
    this.isFlagged = false;

    this.draw = function() {
        if (this.isOpen||this.image===11) {
            this.draw_from_id();
        } else {
            draw_button_closed(this.x, this.y);
        }
    };

    this.isClicked = function(mX, mY, insta, leftcl) {
        if ((((((mX > this.x - 22 && mX < this.x + 22 && mY > this.y - 22 && mY < this.y + 22) || insta) && !this.isOpen)&&leftcl)&&this.image!==11)&&!this.isBomb) {
            this.isOpen = true;
            //println(this.xID+"  "+this.yID);

            if (this.image === 0) {


                if (this.yID > 0) {
                    MineField[this.xID][this.yID - 1].isClicked(mX, mY, true,true);
                }
                if (this.yID < 9) {
                    MineField[this.xID][this.yID + 1].isClicked(mX, mY, true,true);
                }
                if (this.xID < 10) {
                    MineField[this.xID + 1][this.yID].isClicked(mX, mY, true,true);
                }
                if (this.xID > 0) {
                    MineField[this.xID - 1][this.yID].isClicked(mX, mY, true,true);
                }
            } else {
                return;
            }
        }
        else if ((mX > this.x - 22 && mX < this.x + 22 && mY > this.y - 22 && mY < this.y + 22)&&!this.isOpen&&!leftcl){
         if (this.image === 11){
          this.image = 0;
         }
         else{
            this.image = 11;
            
             }
            
        }

        //println("true");
    };


    this.draw_from_id = function() {
        switch (this.image) {
            case 0:
                draw_button_empty(this.x, this.y);
                break;
            case 1:
                draw_button_one(this.x, this.y);
                break;
            case 2:
                draw_button_two(this.x, this.y);
                break;
            case 3:
                draw_button_three(this.x, this.y);
                break;
            case 4:
                draw_button_four(this.x, this.y);
                break;
            case 5:
                draw_button_five(this.x, this.y);
                break;
            case 6:
                draw_button_six(this.x, this.y);
                break;
            case 10:
                draw_button_bomb(this.x, this.y);
                break;
            case 11:
                draw_button_flag(this.x, this.y);
                break;
        }

    };
};
var setup_gen_bombs = function(){
        var x = round(random(0,9));
        var y = round(random(0,10));
        if (!MineField[y][x].isBomb){
            MineField[y][x].image = 10;
            MineField[y][x].isBomb = true;
        }
        else{setup_gen_bombs();}
        
        
       
    
    
};
var setup_gen_numbers = function(){

for (var i = 0; i < 11; i++) {
    for (var j = 0; j < 10; j++) {
        if(MineField[i][j].image!== 10){
            //println(i+"   "+j);
            if(i>0){ //oben
                if (MineField[i-1][j].image === 10){
             MineField[i][j].image += 1;  
             //println(i+"   "+j);
                }
            }            
            if(i<10){ //unten
                if (MineField[i+1][j].image === 10){
             MineField[i][j].image += 1;  
             //println(i+"   "+j);
                }
            }      
            if(j>0){
                if (MineField[i][j-1].image === 10){
             MineField[i][j].image += 1;  
             //println(i+"   "+j);
                }
            }  
            if(j<9){
                if (MineField[i][j+1].image === 10){
             MineField[i][j].image += 1;  
             //println(i+"   "+j);
                }
            }       
            if(j>0&&i>0){
                    if (MineField[i-1][j-1].image === 10){
                    MineField[i][j].image += 1;  
                 //println(i+"   "+j);
                }   
            
                
            }
            if(j<10&&i>11){
                if (MineField[i+1][j+1].image === 10){
                    MineField[i][j].image += 1;  
                 //println(i+"   "+j);
                }   
              
            
            }
            
              if(j<9&&i<10){
                    if (MineField[i+1][j+1].image === 10){
                    MineField[i][j].image += 1;  
                 //println(i+"   "+j);
                }   
            
                
            }
            
            
            
            
        
        
        
    
}}}
    
    
    
};
var setup_main = function(){
for (var i = 0; i < 11; i++) {
    var getAdded = [];
    for (var j = 0; j < 10; j++) {


        getAdded[j] = new MineSquare(i * 43 + 34, j * 43 + 117, i, j);
    }
    MineField[i] = getAdded;
}



for (var i = 0; i < 11; i++) {
    for (var j = 0; j < 10; j++) {
        MineField[i][j].draw();
    }
}
for (var i = 0; i<bombenzahl;i++){
setup_gen_bombs();

}

setup_gen_numbers();

};




draw_background();
setup_main();
//draw_test_field();
//draw_test_field();

/*
MineField[1][1].image = 5;
MineField[2][2].image = 5;
MineField[0][0].image = 5;
MineField[1][2].image = 5;
MineField[0][3].image = 5;
*/


draw = function() {};

//draw_test_field();
//i*43+34,j*43+117

var mousePressed = function() {
    //println(mouseButton);
    //39 = right
    //37 = left
    if (mousePressed && (mouseButton === 37)) {
        //println("left mouse event");
        //ms.isClicked();
        for (var i = 0; i < 11; i++) {
            for (var j = 0; j < 10; j++) {
                MineField[i][j].isClicked(mouseX, mouseY, false, true );
            }
        }
        for (var i = 0; i < 11; i++) {
            for (var j = 0; j < 10; j++) {
                MineField[i][j].draw();
            }
        }

    } else if (mousePressed && (mouseButton === 39)) {
        //println("right mouse event");
        for (var i = 0; i < 11; i++) {
            for (var j = 0; j < 10; j++) {
                MineField[i][j].isClicked(mouseX, mouseY, false , false);
            }
        }
        for (var i = 0; i < 11; i++) {
            for (var j = 0; j < 10; j++) {
                MineField[i][j].draw();
            }
        }
    }

};